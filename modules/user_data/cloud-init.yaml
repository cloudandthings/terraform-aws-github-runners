#cloud-config
# See https://cloudinit.readthedocs.io/en/latest/

# ## Helpful commands ##
# sudo cat /var/lib/cloud/instance/user-data.txt
# sudo cat /var/log/cloud-init-output.log
# cloud-init devel schema --config-file x.yaml

users:
- default
%{~ if length(SSH_AUTHORIZED_KEYS) > 0 }
- name: ubuntu
  ssh_authorized_keys:
  %{~ for X in SSH_AUTHORIZED_KEYS }
  - ${X}
  %{~ endfor }
%{~ endif }
%{~ for X in USERS }
- ${X}
%{~ endfor }


# Install additional packages on first boot
package_update: true
package_reboot_if_required: true
packages:
- awscli
- jq
- cloud-utils
# ##########################################
# Extra packages
%{~ for X in PACKAGES }
- ${X}
%{~ endfor }
# ##########################################
# ##########################################
%{~ if length(WRITE_FILES) > 0 or length(CLOUDWATCH_LOG_GROUP) > 0 }
write_files:
%{~ endif }
%{~ if length(CLOUDWATCH_LOG_GROUP) > 0 }
- path: awslogs.conf
  content: |
    [general]
    state_file = /var/awslogs/state/agent-state
    [/var/log/syslog]
    datetime_format = %Y-%m-%d %H:%M:%S
    file = /var/log/syslog
    buffer_duration = 5000
    log_stream_name = {instance_id}
    initial_position = start_of_file
    log_group_name = ${CLOUDWATCH_LOG_GROUP}/var/log/syslog
%{~ endif }
%{~ for X in WRITE_FILES }
- ${X}
%{~ endfor }
runcmd:
# ##########################################
# Extra runcmds
- echo ==== EXTRA RUNCMDS ====
%{~ for X in RUNCMDS }
- ${X}
%{~ endfor }
%{~ if length(CLOUDWATCH_LOG_GROUP) > 0 }
- curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O
- python2 ./awslogs-agent-setup.py -r ${REGION} -n -c awslogs.conf
%{~ endif }
# ##########################################
# ##########################################
- echo ==== ACTIONS-RUNNER ====
# install actions-runner
- mkdir actions-runner && cd actions-runner
- curl -s https://github.com/actions/runner/releases | grep -o -E "https://github.*actions-runner-linux-x64-[0-9\.]+.tar.gz" | sort | uniq > versions.txt
- RUNNER_FILE_LINK=`cat versions.txt | tail -n1`
- curl -o actions-runner-linux-x64.tar.gz -L $RUNNER_FILE_LINK
- tar xzf ./actions-runner-linux-x64.tar.gz
- cd ..
- mv actions-runner /home/ubuntu/actions-runner
- chown -R ubuntu:ubuntu /home/ubuntu

# configure actions-runner
- PERSONAL_ACCESS_TOKEN=`aws ssm get-parameter --with-decryption --name ${SSM_PARAMETER_NAME} --region ${REGION} | jq -r '.Parameter.Value'`
- >
  TOKEN_RESPONSE=`curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token $PERSONAL_ACCESS_TOKEN" https://api.github.com/orgs/${GITHUB_ORGANISATION_NAME}/actions/runners/registration-token`
- TOKEN=`echo $TOKEN_RESPONSE | jq -r '.token'`
- su ubuntu -c "/home/ubuntu/actions-runner/config.sh --url '${GITHUB_URL}' --unattended --token $TOKEN ${ARG_RUNNERGROUP} ${ARG_LABELS}"
# Install as service
- cd /home/ubuntu/actions-runner/ && bash ./svc.sh install ubuntu
- echo ==== ACTIONS-RUNNER DONE ====
- INSTANCE_ID=`ec2metadata --instance-id`
- aws ec2 create-tags --region ${REGION} --resources $INSTANCE_ID --tags Key=terraform-aws-github-runner:setup,Value=done
power_state:
  mode: reboot

# ##########################################
# Other
%{~ if length(OTHER) > 0 }
${OTHER}
%{~ endif }
